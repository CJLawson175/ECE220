# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U_cG5WssboTxMI8_IyY4cQLW8CZJB-R-
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Title of the app
st.title("CSV Data Visualization App")

# File uploader for CSV
uploaded_file = st.file_uploader("Upload CSV file", type=["csv"])

if uploaded_file is not None:
    # Read the CSV file
    data = pd.read_csv(uploaded_file)
    st.write("### Data Preview")
    st.dataframe(data)

    # Check if the necessary columns are present
    if 'Year' in data.columns and 'Month' in data.columns:
        # Create a new 'Date' column combining 'Year' and 'Month'
        data['Date'] = pd.to_datetime(data[['Year', 'Month']].assign(DAY=1))

        # Dropdown for selecting X-axis column
        x_column = 'Date'  # Use the combined date column for X-axis

        # Dropdown for selecting Y-axis column
        y_column = st.selectbox("Select Y-axis column", ["CO2", "NO2", "Ozone", "PM2.5", "Monthly AQI Average"])

        # Dropdown for graph type
        graph_type = st.selectbox("Select Graph Type", ["Line", "Scatter", "Bar"])

        # Plot button
        if st.button("Plot Graph"):
            fig, ax = plt.subplots(figsize=(10, 6))

            # Plotting logic
            if graph_type == "Line":
                ax.plot(data[x_column], data[y_column], marker='o')
                ax.set_title(f"{y_column} vs {x_column} (Line Plot)")

            elif graph_type == "Scatter":
                ax.scatter(data[x_column], data[y_column])
                ax.set_title(f"{y_column} vs {x_column} (Scatter Plot)")

            elif graph_type == "Bar":
                # Create a bar plot
                ax.bar(data[x_column], data[y_column])
                ax.set_title(f"{y_column} vs {x_column} (Bar Chart)")

            # Set labels
            ax.set_xlabel("Date")
            ax.set_ylabel(y_column)
            plt.xticks(rotation=45)  # Rotate x labels for better readability
            st.pyplot(fig)

        st.write("Tip: Ensure the selected columns are suitable for meaningful plots.")
    else:
        st.error("The CSV file must contain 'Year' and 'Month' columns.")
else:
    st.info("Please upload a CSV file to get started.")